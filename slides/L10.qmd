---
title: "Two-Way ANOVA"
subtitle: "STA5176: Statistical Modeling"
author: "Dr. Seals"
format: 
  revealjs:
    theme: dark2
    self-contained: false
    slide-number: false
    footer: "[STA5176 - Statistical Modeling](https://samanthaseals.github.io/STA5176)"
    width: 1600
    height: 900
    chalkboard: true
    df-print: paged
    html-math-method: katex
editor: source
---

## Introduction

- Previously, we discussed two-way ANOVA.

- We learned how to:

    - Create an ANOVA model with an interaction term
    - Test the interaction term
    - Create an ANOVA model without an interaction term
    - Test the main effects
    
- Today we will learn how to best communicate results, whether it's the resulting interaction term or main effects.

## Interactions

- Remember, interactions mean that the relationship between the outcome and one factor depend on the level of another factor.

- e.g., the relationship between grade in General Chemistry I and classification (freshman, sophomore, junior, or senior) depends on the level of major (STEM, non-STEM)

- Now, we want to pry inside of the interaction so that we can communicate its meaning to non-statisticians/non-data scientists.

## Profile Plots

- If we detect an interaction term, we must give meaning to it.

- An easy way to do this is to plot the treatment group means to visualize the interaction. This is called a profile plot.

    - *y*-axis: always the average outcome
    
    - *x*-axis: either factor A or B
    
        - if only one factor is ordinal, use it for the *x*-axis
        
        - if there are two ordinal or two nominal factors, select the factor with the largest number of levels for the *x*-axis
        
    - lines on the plot: the factor that was not selected for the *x*-axis

## Profile Plots: Example

- Let's first find the treatment means for the heat loss data,

```{r, echo = TRUE, warning = FALSE, message = FALSE}
library(gsheet)
library(tidyverse)
data <- as_tibble(gsheet2tbl("https://docs.google.com/spreadsheets/d/1MNgpPyIp9tkcTgN3UHklayqQS1tT0pFDYS9oIIqICtg/edit#gid=0"))

means <- data %>%
  group_by(`Pane Design`, `Ext Temp (F)`) %>%
  summarize(mean = mean(`Heat Loss`)) %>%
  ungroup()

head(means)
```

## Profile Plots: Example

- The average heat loss will go on our *y*-axis.

- Because only external temperature is ordinal, it will go on our *x*-axis.

- Thus, the lines will represent the pane design.

    - This means I want to restructure the dataset with the means to have a column for each of the pane designs.

```{r, echo = TRUE}
A <- means %>% filter(`Pane Design` == "A") %>% rename(A = mean) %>% select(-`Pane Design`)
B <- means %>% filter(`Pane Design` == "B") %>% rename(B = mean) %>% select(-`Pane Design`)
C <- means %>% filter(`Pane Design` == "C") %>% rename(C = mean) %>% select(-`Pane Design`)
D <- means %>% filter(`Pane Design` == "D") %>% rename(D = mean) %>% select(-`Pane Design`)
E <- means %>% filter(`Pane Design` == "E") %>% rename(E = mean) %>% select(-`Pane Design`)
graph <- full_join(A, B, by = "Ext Temp (F)")
graph <- full_join(graph, C, by = "Ext Temp (F)")
graph <- full_join(graph, D, by = "Ext Temp (F)")
graph <- full_join(graph, E, by = "Ext Temp (F)")
graph <- graph %>% mutate(`Ext Temp (F)` = as.factor(`Ext Temp (F)`))
```

## Profile Plots: Example

```{r, echo = TRUE}
head(graph)
```

## Profile Plots: Example

- Building profile plots using `ggplot()` is a process.

    - First, include a `geom_line()` for each level of the factor creating the lines.
    
```{r, echo = TRUE, eval = FALSE}
graph %>% 
  ggplot(aes(x = `Ext Temp (F)`, group = 1)) +
  geom_line(aes(y = A), color = "pink") +
  geom_line(aes(y = B), color = "purple") + 
  geom_line(aes(y = C), color = "blue") + 
  geom_line(aes(y = D), color = "green") + 
  geom_line(aes(y = E), color = "black") + 
  theme_bw()
```

## Profile Plots: Example

```{r}
graph %>% 
  ggplot(aes(x = `Ext Temp (F)`, group = 1)) +
  geom_line(aes(y = A), color = "pink") +
  geom_line(aes(y = B), color = "purple") + 
  geom_line(aes(y = C), color = "blue") + 
  geom_line(aes(y = D), color = "green") + 
  geom_line(aes(y = E), color = "black") + 
  theme_bw()
```


## Profile Plots: Example

- Building profile plots using `ggplot()` is a process.

    - Then, add `geom_text()` to label each line (use the line colors to make sure everything is labeled properly).
    
```{r, echo = TRUE, eval = FALSE}
graph %>% 
  ggplot(aes(x = `Ext Temp (F)`, group = 1)) +
  geom_line(aes(y = A), color = "pink") +
  geom_line(aes(y = B), color = "purple") + 
  geom_line(aes(y = C), color = "blue") + 
  geom_line(aes(y = D), color = "green") + 
  geom_line(aes(y = E), color = "black") + 
  geom_text(aes(x = "85" , y = 7.5, label = "A & B"))  +
  geom_text(aes(x = "85" , y = 8, label = "C"))  +
  geom_text(aes(x = "85" , y = 8.2, label = "D"))  +
  geom_text(aes(x = "85" , y = 9.55, label = "E"))  +
  theme_bw()
```


## Profile Plots: Example
    
```{r}
graph %>% 
  ggplot(aes(x = `Ext Temp (F)`, group = 1)) +
  geom_line(aes(y = A), color = "pink") +
  geom_line(aes(y = B), color = "purple") + 
  geom_line(aes(y = C), color = "blue") + 
  geom_line(aes(y = D), color = "green") + 
  geom_line(aes(y = E), color = "black") + 
  geom_text(aes(x = "85" , y = 7.5, label = "A & B"))  +
  geom_text(aes(x = "85" , y = 8, label = "C"))  +
  geom_text(aes(x = "85" , y = 8.2, label = "D"))  +
  geom_text(aes(x = "85" , y = 9.55, label = "E"))  +
  theme_bw()
```

## Profile Plots: Example

- Building profile plots using `ggplot()` is a process.

    - Then, clean up time:
    
        - Fix axis titles
        - Change line colors
    
    - Because of the context, we will likely be recommending panel design A (pink) or B (purple) as they have the least heat loss across all temperatures. 
    
        - Thus, we will change A & B's lines to black while changing C, D, & E's lines to gray.
    
```{r, echo = TRUE, eval = FALSE}
graph %>% 
  ggplot(aes(x = `Ext Temp (F)`, group = 1)) +
  geom_line(aes(y = A), color = "black") +
  geom_line(aes(y = B), color = "black") + 
  geom_line(aes(y = C), color = "gray") + 
  geom_line(aes(y = D), color = "gray") + 
  geom_line(aes(y = E), color = "gray") + 
  geom_text(aes(x = "85" , y = 7.5, label = "A & B"))  +
  geom_text(aes(x = "85" , y = 8, label = "C"), color = "gray")  +
  geom_text(aes(x = "85" , y = 8.2, label = "D"), color = "gray")  +
  geom_text(aes(x = "85" , y = 9.55, label = "E"), color = "gray")  +
  geom_text(aes(x = "85" , y = 10, label = "Panel Design"))  +
  xlab("External Temperature (Fahrenheit)") +
  ylab("Average Heat Loss") +
  theme_bw()
```

## Profile Plots: Example
    
```{r}
graph %>% 
  ggplot(aes(x = `Ext Temp (F)`, group = 1)) +
  geom_line(aes(y = A), color = "black") +
  geom_line(aes(y = B), color = "black") + 
  geom_line(aes(y = C), color = "gray") + 
  geom_line(aes(y = D), color = "gray") + 
  geom_line(aes(y = E), color = "gray") + 
  geom_text(aes(x = "85" , y = 7.5, label = "A & B"))  +
  geom_text(aes(x = "85" , y = 8, label = "C"), color = "gray")  +
  geom_text(aes(x = "85" , y = 8.2, label = "D"), color = "gray")  +
  geom_text(aes(x = "85" , y = 9.55, label = "E"), color = "gray")  +
  geom_text(aes(x = "85" , y = 10, label = "Panel Design"))  +
  xlab("External Temperature (Fahrenheit)") +
  ylab("Average Heat Loss") +
  theme_bw()
```

## Profile Plots

- Profile plots give us (statisticians and data scientists) a visualization to see what's going on.

- I try to give a summary based on profile plots:

    - e.g., in the heat loss example: For panel designs A, B, C, and D, heat loss decreases as external temperature increases. Interestingly, panel design E has consistent heat loss across external temperatures, hovering around 9.5$^\circ$F. Outside of that specific panel design, panel designs C & D consistently have higher heat loss than panel designs A & B. 
    
- As can be seen, the profile plots creation process is entirely dependent on the data at hand + the story being told. 

    - Sometimes we will look at something and decide it isn't the best way to visualize. 
    
    - Sometimes we need to consult with who we are working with to see how to change our visualization to help their understanding or to be more useful for their purposes.
    
## Main Effects

- Recall that when the interaction term is not significant, we must remove it from our ANOVA model and test the main effects.

- Also recall from one-way ANOVA -- the test is just telling us if a difference exists, not where the specific difference is.

- We will now look at posthoc testing in two-way ANOVA.

- We will focus on the application of Tukey's test, though others are possible. 

## Tukey's Test

- First, recall the two-way ANOVA without the interaction term between pane design and external temperature.

```{r, echo = TRUE}
m1 <- aov(`Heat Loss` ~ as.factor(`Pane Design`) + as.factor(`Ext Temp (F)`), data = data)
summary(m1)
```

- We will perform Tukey's on both pane design and external temperature.

## Tukey's Test

```{r, echo = TRUE}
TukeyHSD(m1, which = "as.factor(`Pane Design`)") 
```

- Only panel designs A and D are significantly different (*p* = 0.027).


## Tukey's Test

```{r, echo = TRUE}
TukeyHSD(m1, which = "as.factor(`Ext Temp (F)`)") 
```

- 0$^\circ$F is significantly different from all higher temperatures (all *p* < 0.040)
- 20$^\circ$F is not significantly different from 40$^\circ$F (*p* = 0.999), but is significantly different from temperatures 60$^\circ$F and above (all *p* < 0.001)
- 40$^\circ$F is significantly different from all higher temperatures (all *p* < 0.002)
- 60$^\circ$F is not significantly different from 80$^\circ$F (*p* = 0.412)

## Conclusions

- We must take things a step further to provide interpretations to those we are working with.

- Note 1: profile plots are valid for models without significant interactions.

- Note 2: we could perform Tukey's test on the interaction term to see which treatment groups are significantly different.

    - In the current example, that's too many treatment groups to do pairwise comparisons with given the sample size.